b = 0.5
m = 1
v = 0.8
pi_bar = 0.02
r_bar = 0.04
o = 0
df = tibble(
t=c(0:20),y = 0,r = 0.04, pi = pi_bar
)
output = function(b,m,v,a,pilag,o,pibar){
return((1/(1+b*m*v))*(a-b*m*(pilag+o-pibar)))
}
inflation = function(pilag,v,y,o) {
return(pilag+v*y+o)
}
for(i in 2:21) {
if (i==2) {
df$y[i] = output(b,m,v,0.1,df$pi[i-1],o,pi_bar)
df$pi[i] = inflation(df$pi[i-1],v,df$y[i],o)#df$pi[i-1]+v*df$y[i]+o
df$r[i] = m*(df$pi[i]-pi_bar)+r_bar
}else{
df$y[i] = (1/(1+b*m*v))*(a-b*m*(df$pi[i-1]+o-pi_bar))
df$pi[i] = df$pi[i-1]+v*df$y[i]+o
df$r[i] = m*(df$pi[i]-pi_bar)+r_bar
}}
ggplot(df,aes(t))+
geom_line(aes(y=y),color="blue")+
geom_line(aes(y=pi),color="red")+
geom_line(aes(y=r),color="green")+
theme_bw()
## Insert your code for solving problem 3 here
a = 0
b = 0.5
m = 1
v = 0.8
pi_bar = 0.02
r_bar = 0.04
o = 0
df = tibble(
t=c(0:20),y = 0,r = 0.04, pi = pi_bar
)
output = function(b,m,v,a,pilag,o,pibar){
return((1/(1+b*m*v))*(a-b*m*(pilag+o-pibar)))
}
inflation = function(pilag,v,y,o) {
return(pilag+v*y+o)
}
rate = function(m,pi,pibar,rbar) {
return(m*(df$pi[i]-pi_bar)+r_bar)
}
for(i in 2:21) {
if (i==2) {
df$y[i] = output(b,m,v,0.1,df$pi[i-1],o,pi_bar)
df$pi[i] = inflation(df$pi[i-1],v,df$y[i],o)
df$r[i] = rate(m,df$pi[i],pi_bar,r_bar)#m*(df$pi[i]-pi_bar)+r_bar
}else{
df$y[i] = output(b,m,v,a,df$pi[i-1],o,pi_bar)#(1/(1+b*m*v))*(a-b*m*(df$pi[i-1]+o-pi_bar))
df$pi[i] = inflation(df$pi[i-1],v,df$y[i],o)
df$r[i] = rate(m,df$pi[i],pi_bar,r_bar)#m*(df$pi[i]-pi_bar)+r_bar
}}
ggplot(df,aes(t))+
geom_line(aes(y=y),color="blue")+
geom_line(aes(y=pi),color="red")+
geom_line(aes(y=r),color="green")+
theme_bw()
View(df)
df = tibble(
pi=c(-100:100),supply=0,demand=0,AS=0,AD=0,supply2=0,demand2=0
)
df$pi = df$pi/100
m=1
for(i in 1:201) {
if(i==1){
df$supply[i] = y_supply(df$pi[i],pi_bar,v,0.1)
df$demand[i] = y_demand(df$pi[i],a,b,r_bar,m,pi_bar)
df$AS[i] = pi_bar + v*df$supply[i]
df$AD[i] = pi_bar - (1/(b*m))*df$demand[i]
df$supply2[i] = y_supply(df$pi[i],pi_bar,v,0.1)
df$demand2[i] = y_demand(df$pi[i],a,b,r_bar,2,pi_bar)
}else{
df$supply[i] = y_supply(df$pi[i],pi_bar,v,o)
df$demand[i] = y_demand(df$pi[i],a,b,r_bar,m,pi_bar)
df$AS[i] = pi_bar + v*df$supply[i]
df$AD[i] = pi_bar - (1/(b*m))*df$demand[i]
df$Irate[i] = nominal_interest_rate(df$pi[i],m,pi_bar,r_bar)
df$supply2[i] = y_supply(df$pi[i],pi_bar,v,o)
df$demand2[i] = y_demand(df$pi[i],a,b,r_bar,2,pi_bar)
}
}
df %>% ggplot(aes(y=pi))+
geom_line(aes(x=demand))+
geom_line(aes(x=supply))+
geom_line(aes(x=supply2),color="red")+
geom_line(aes(x=demand2),color="red")+theme_bw()+
ylab("Inflation")+xlab("Output")+
ggtitle("Reaction: M=2 (red)")
## Insert your code for solving problem 1 here
y_demand = function(pi,a,b,rbar,m,pibar) {
return(a-b*((m*(pi-pibar)+rbar)-rbar))
}
y_supply = function(pi,pi_lag,nu,o) {
return((pi-pi_lag-o)/nu)
}
nominal_interest_rate = function(pi,m,pibar,rbar) {
return(m*(pi-pibar)+rbar)
}
## Insert your code for solving problem 2 here
library(ggplot2)
#Data
a = 0
b = 0.5
m = 1
v = 0.8
pi_bar = 0.02
r_bar = 0.02
o = 0
df = tibble(
pi=c(-100:100),supply=0,demand=0,AS=0,AD=0,supply2=0,demand2=0
)
df$pi = df$pi/100
m=1
for(i in 1:201) {
if(i==1){
df$supply[i] = y_supply(df$pi[i],pi_bar,v,0.1)
df$demand[i] = y_demand(df$pi[i],a,b,r_bar,m,pi_bar)
df$AS[i] = pi_bar + v*df$supply[i]
df$AD[i] = pi_bar - (1/(b*m))*df$demand[i]
df$supply2[i] = y_supply(df$pi[i],pi_bar,v,0.1)
df$demand2[i] = y_demand(df$pi[i],a,b,r_bar,2,pi_bar)
}else{
df$supply[i] = y_supply(df$pi[i],pi_bar,v,o)
df$demand[i] = y_demand(df$pi[i],a,b,r_bar,m,pi_bar)
df$AS[i] = pi_bar + v*df$supply[i]
df$AD[i] = pi_bar - (1/(b*m))*df$demand[i]
df$Irate[i] = nominal_interest_rate(df$pi[i],m,pi_bar,r_bar)
df$supply2[i] = y_supply(df$pi[i],pi_bar,v,o)
df$demand2[i] = y_demand(df$pi[i],a,b,r_bar,2,pi_bar)
}
}
df %>% ggplot(aes(y=pi))+
geom_line(aes(x=demand))+
geom_line(aes(x=supply))+
geom_line(aes(x=supply2),color="red")+
geom_line(aes(x=demand2),color="red")+theme_bw()+
ylab("Inflation")+xlab("Output")+
ggtitle("Reaction: M=2 (red)")
df = tibble(
pi=c(-100:100),supply=0,demand=0,AS=0,AD=0,supply2=0,demand2=0
)
df$pi = df$pi/100
m=1
for(i in 1:201) {
if(i==1){
df$supply[i] = y_supply(df$pi[i],pi_bar,v,0.1)
df$demand[i] = y_demand(df$pi[i],a,b,r_bar,m,pi_bar)
df$AS[i] = pi_bar + v*df$supply[i]
df$AD[i] = pi_bar - (1/(b*m))*df$demand[i]
df$supply2[i] = y_supply(df$pi[i],pi_bar,v,0.1)
df$demand2[i] = y_demand(df$pi[i],a,b,r_bar,2,pi_bar)
}else{
df$supply[i] = y_supply(df$pi[i],pi_bar,v,o)
df$demand[i] = y_demand(df$pi[i],a,b,r_bar,m,pi_bar)
df$AS[i] = pi_bar + v*df$supply[i]
df$AD[i] = pi_bar - (1/(b*m))*df$demand[i]
df$supply2[i] = y_supply(df$pi[i],pi_bar,v,o)
df$demand2[i] = y_demand(df$pi[i],a,b,r_bar,2,pi_bar)
}
}
df %>% ggplot(aes(y=pi))+
geom_line(aes(x=demand))+
geom_line(aes(x=supply))+
geom_line(aes(x=supply2),color="red")+
geom_line(aes(x=demand2),color="red")+theme_bw()+
ylab("Inflation")+xlab("Output")+
ggtitle("Reaction: M=2 (red)")
knitr::opts_chunk$set(echo = TRUE, cache = F)
library(dplyr)
library(ggplot2)
library(lubridate)
library(tidyr)
df = tibble(
pi=c(-100:100),supply=0,demand=0,AS=0,AD=0
)
df$pi = df$pi/100
for(i in 1:201) {
if(i==103){
df$supply[i] = y_supply(df$pi[i],pi_bar,v,o)
df$demand[i] = y_demand(df$pi[i],a,b,r_bar,m,pi_bar)
df$AS[i] = pi_bar + v*df$supply[i]
df$AD[i] = pi_bar - (1/(b*m))*df$demand[i]
}else{
df$supply[i] = y_supply(df$pi[i],pi_bar,v,o)
df$demand[i] = y_demand(df$pi[i],a,b,r_bar,m,pi_bar)
df$AS[i] = pi_bar + v*df$supply[i]
df$AD[i] = pi_bar - (1/(b*m))*df$demand[i]
}
}
df %>% ggplot(aes(y=pi))+
geom_line(aes(x=demand))+
geom_line(aes(x=supply))+theme_bw()+
ylab("Inflation")+xlab("Output")
df = tibble(
pi=c(-100:100),supply=0,demand=0,AS=0,AD=0,Irate=0
)
df$pi = df$pi/100
###!!!!! inn all tasks, Supply shock and Demand shocks happens at the wrong time!!!!
for(i in 1:201) {
if(i==104){  #first loop is the shock
df$supply[i] = y_supply(df$pi[i],pi_bar,v,o)
df$demand[i] = y_demand(df$pi[i],0.1,b,r_bar,m,pi_bar)
df$AS[i] = pi_bar + v*df$supply[i]
df$AD[i] = pi_bar - (1/(b*m))*df$demand[i]
}else{
df$supply[i] = y_supply(df$pi[i],pi_bar,v,o)
df$demand[i] = y_demand(df$pi[i],a,b,r_bar,m,pi_bar)
df$AS[i] = pi_bar + v*df$supply[i]
df$AD[i] = pi_bar - (1/(b*m))*df$demand[i]
}
}
m1_2 = df %>% ggplot(aes(y=pi))+
geom_line(aes(x=demand))+
geom_line(aes(x=supply))+
theme_bw()+
ylab("Inflation")+xlab("Output")+
ggtitle("Reaction: M=1")
m1_2
View(df)
## Insert your code for solving problem 4 here
a = 0
b = 0.5
m = 1
v = 0.8
pi_bar = 0.02
r_bar = 0.04
o = 0
output = function(v,b,lambda,pilag,pibar,o) {
return((v/(b*(lambda+v^2)))*(pibar-pilag-o))
}
rate = function(rbar,a,v,b,lambda,pi_bar,pi_lag,o) {
return(rbar+(a/b)+(v/(b*(lambda+v^2)))*(pi_lag-pi_bar+o))
}
inflation = function(pilag,v,y,o) {
return(pilag+v*y+o)
}
df = tibble(
t=c(0:20),y = 0,r = 0.04, pi =
pi_bar,rOptimal=0.04,yOptimal=0,piOptimal=pi_bar
)
for(i in 2:21) {
if (i==2) {
df$y[i] = (1/(1+b*m*v))*(a-b*m*(df$pi[i-1]+0.1-pi_bar))
df$pi[i] = df$pi[i-1]+v*df$y[i]+0.1
df$r[i] = m*(df$pi[i]-pi_bar)+r_bar
df$rOptimal[i] = rate(r_bar,a,v,b,1,pi_bar,df$piOptimal[i-1],0.1)
df$yOptimal[i] = output(v,b,1,df$piOptimal[i-1],pi_bar,0.1)
df$piOptimal[i] = inflation(df$piOptimal[i-1],v,df$yOptimal[i],0.1)
}else{
df$y[i] = (1/(1+b*m*v))*(a-b*m*(df$pi[i-1]+o-pi_bar))
df$pi[i] = df$pi[i-1]+v*df$y[i]+o
df$r[i] = m*(df$pi[i]-pi_bar)+r_bar
df$rOptimal[i] = rate(r_bar,a,v,b,1,pi_bar,df$piOptimal[i-1],o)
df$yOptimal[i] = output(v,b,1,df$piOptimal[i-1],pi_bar,o)
df$piOptimal[i] = inflation(df$piOptimal[i-1],v,df$yOptimal[i],o)
}
}
Normal = ggplot(df,aes(t))+
geom_line(aes(y=y),color="blue")+
geom_line(aes(y=pi),color="red")+
geom_line(aes(y=r),color="green")+
theme_bw()+
ggtitle("Equation 2")+
xlab("Time")+
ylab("Output, Rate and Inflation")
Optimal = ggplot(df,aes(t))+
geom_line(aes(y=rOptimal),color="green")+
geom_line(aes(y=piOptimal),color="red")+
geom_line(aes(y=yOptimal),color="blue")+
theme_bw()+
ggtitle("Equation 5")+
xlab("Time")+
ylab("Output, Rate and Inflation")
library(gridExtra)
grid.arrange(Normal,Optimal,ncol=2)
library(tidyverse)
library(tseries)
Integrated = read_csv("dfE&P.csv")
Integrated = Integrated %>% filter(!is.na(`Shareholders' Equity - Attributable to Parent ShHold - Total`))
#Test
#Integrated = Integrated %>% filter(Instrument == "EQNR.OL")
for (i in 1:nrow(Integrated)) {
if (is.na(Integrated$`Tax Rate - Actual`[i])) {
if (!is.na(Integrated$`Effective Tax Rate, (%)`[i])) {
Integrated$`Tax Rate - Actual`[i] = Integrated$`Effective Tax Rate, (%)`[i]
}else{
Integrated$`Tax Rate - Actual`[i] = Integrated$`Tax Rate - Mean`[i]
}
}
}
Integrated = Integrated %>%
group_by(Integrated$`Company Common Name`) %>%
filter(n() >= 3)
Integrated$NDtoE = Integrated$`Net Debt to Total Equity`
Integrated$Size = log(Integrated$`Total Assets`)
Integrated$Tangibility = Integrated$`PPE - Net Percentage of Total Assets`
Integrated$GrowthO = Integrated$`Market Capitalization`/Integrated$`Total Assets`
Integrated$TaxRate = Integrated$`Tax Rate - Actual`
Integrated$DtoE = Integrated$`Total Debt Percentage of Total Equity`/100
Integrated = Integrated %>% filter(Instrument != "PEA.TO")
# just to check, cant just remove all N/a and replace with 0.
#Integrated[is.na(Integrated)] = 0
reg_int = lm(DtoE ~
Size+
Tangibility+
GrowthO+
TaxRate+
OilPrice
,
data = Integrated
)
summary(reg_int)
mean(Integrated$DtoE,na.rm = TRUE)
library(car)
vif(reg_int)
adf.test(Integrated$NDtoE)
adf.test(Integrated$Size)
adf.test(Integrated$Tangibility)
adf.test(Integrated$GrowthO)
adf.test(Integrated$TaxRate)
plot(Integrated$NDtoE)
library(readxl)
OilPrice = read_excel("Oil_Price.xlsx")
Int = Integrated %>% group_by(Year) %>%
mutate(
mDtoE = mean(DtoE,na.rm=TRUE),
mNDtoE = mean(NDtoE,na.rm=TRUE),
mMCap = mean(`Market Capitalization`,na.rm=TRUE),
)
#Integrated$OilPrice = OilPrice[1,2]
class(Integrated$OilPrice)
Integrated$OilPrice = as.numeric(Integrated$OilPrice)
class(OilPrice$Year)
class(OilPrice$Price)
OilPrice$Year = as.numeric(OilPrice$Year)
Integrated$OilPrice = 0
for(j in 1:nrow(OilPrice)) {
for(i in 1:nrow(Integrated)){
if (identical(OilPrice[j,1],Integrated[i,14])) {
Integrated[i,22] = OilPrice[j,2]
}
}
}
setwd("~/Studier/NHH/H2022/Master/RMaster")
library(tidyverse)
library(tseries)
Integrated = read_csv("dfE&P.csv")
Integrated = Integrated %>% filter(!is.na(`Shareholders' Equity - Attributable to Parent ShHold - Total`))
#Test
#Integrated = Integrated %>% filter(Instrument == "EQNR.OL")
for (i in 1:nrow(Integrated)) {
if (is.na(Integrated$`Tax Rate - Actual`[i])) {
if (!is.na(Integrated$`Effective Tax Rate, (%)`[i])) {
Integrated$`Tax Rate - Actual`[i] = Integrated$`Effective Tax Rate, (%)`[i]
}else{
Integrated$`Tax Rate - Actual`[i] = Integrated$`Tax Rate - Mean`[i]
}
}
}
Integrated = Integrated %>%
group_by(Integrated$`Company Common Name`) %>%
filter(n() >= 3)
Integrated$NDtoE = Integrated$`Net Debt to Total Equity`
Integrated$Size = log(Integrated$`Total Assets`)
Integrated$Tangibility = Integrated$`PPE - Net Percentage of Total Assets`
Integrated$GrowthO = Integrated$`Market Capitalization`/Integrated$`Total Assets`
Integrated$TaxRate = Integrated$`Tax Rate - Actual`
Integrated$DtoE = Integrated$`Total Debt Percentage of Total Equity`/100
Integrated = Integrated %>% filter(Instrument != "PEA.TO")
# just to check, cant just remove all N/a and replace with 0.
#Integrated[is.na(Integrated)] = 0
reg_int = lm(DtoE ~
Size+
Tangibility+
GrowthO+
TaxRate+
OilPrice
,
data = Integrated
)
summary(reg_int)
mean(Integrated$DtoE,na.rm = TRUE)
library(car)
vif(reg_int)
adf.test(Integrated$NDtoE)
adf.test(Integrated$Size)
adf.test(Integrated$Tangibility)
adf.test(Integrated$GrowthO)
adf.test(Integrated$TaxRate)
plot(Integrated$NDtoE)
library(readxl)
OilPrice = read_excel("Oil_Price.xlsx")
Int = Integrated %>% group_by(Year) %>%
mutate(
mDtoE = mean(DtoE,na.rm=TRUE),
mNDtoE = mean(NDtoE,na.rm=TRUE),
mMCap = mean(`Market Capitalization`,na.rm=TRUE),
)
#Integrated$OilPrice = OilPrice[1,2]
class(Integrated$OilPrice)
Integrated$OilPrice = as.numeric(Integrated$OilPrice)
class(OilPrice$Year)
class(OilPrice$Price)
OilPrice$Year = as.numeric(OilPrice$Year)
Integrated$OilPrice = 0
for(j in 1:nrow(OilPrice)) {
for(i in 1:nrow(Integrated)){
if (identical(OilPrice[j,1],Integrated[i,14])) {
Integrated[i,22] = OilPrice[j,2]
}
}
}
# just to check, cant just remove all N/a and replace with 0.
#Integrated[is.na(Integrated)] = 0
reg_int = lm(DtoE ~
Size+
Tangibility+
GrowthO+
TaxRate+
OilPrice
,
data = Integrated
)
summary(reg_int)
library(tidyverse)
library(tseries)
Integrated = read_csv("dfDown.csv")
Integrated = Integrated %>% filter(!is.na(`Shareholders' Equity - Attributable to Parent ShHold - Total`))
#Test
#Integrated = Integrated %>% filter(Instrument == "EQNR.OL")
for (i in 1:nrow(Integrated)) {
if (is.na(Integrated$`Tax Rate - Actual`[i])) {
if (!is.na(Integrated$`Effective Tax Rate, (%)`[i])) {
Integrated$`Tax Rate - Actual`[i] = Integrated$`Effective Tax Rate, (%)`[i]
}else{
Integrated$`Tax Rate - Actual`[i] = Integrated$`Tax Rate - Mean`[i]
}
}
}
Integrated = Integrated %>%
group_by(Integrated$`Company Common Name`) %>%
filter(n() >= 3)
Integrated$NDtoE = Integrated$`Net Debt to Total Equity`
Integrated$Size = log(Integrated$`Total Assets`)
Integrated$Tangibility = Integrated$`PPE - Net Percentage of Total Assets`
Integrated$GrowthO = Integrated$`Market Capitalization`/Integrated$`Total Assets`
Integrated$TaxRate = Integrated$`Tax Rate - Actual`
Integrated$DtoE = Integrated$`Total Debt Percentage of Total Equity`/100
Integrated = Integrated %>% filter(Instrument != "PEA.TO")
# just to check, cant just remove all N/a and replace with 0.
#Integrated[is.na(Integrated)] = 0
reg_int = lm(DtoE ~
Size+
Tangibility+
GrowthO+
TaxRate+
OilPrice
,
data = Integrated
)
summary(reg_int)
mean(Integrated$DtoE,na.rm = TRUE)
library(car)
vif(reg_int)
adf.test(Integrated$NDtoE)
adf.test(Integrated$Size)
adf.test(Integrated$Tangibility)
adf.test(Integrated$GrowthO)
adf.test(Integrated$TaxRate)
plot(Integrated$NDtoE)
library(readxl)
OilPrice = read_excel("Oil_Price.xlsx")
Int = Integrated %>% group_by(Year) %>%
mutate(
mDtoE = mean(DtoE,na.rm=TRUE),
mNDtoE = mean(NDtoE,na.rm=TRUE),
mMCap = mean(`Market Capitalization`,na.rm=TRUE),
)
#Integrated$OilPrice = OilPrice[1,2]
class(Integrated$OilPrice)
Integrated$OilPrice = as.numeric(Integrated$OilPrice)
class(OilPrice$Year)
class(OilPrice$Price)
OilPrice$Year = as.numeric(OilPrice$Year)
Integrated$OilPrice = 0
for(j in 1:nrow(OilPrice)) {
for(i in 1:nrow(Integrated)){
if (identical(OilPrice[j,1],Integrated[i,14])) {
Integrated[i,22] = OilPrice[j,2]
}
}
}
# just to check, cant just remove all N/a and replace with 0.
#Integrated[is.na(Integrated)] = 0
reg_int = lm(DtoE ~
Size+
Tangibility+
GrowthO+
TaxRate+
OilPrice
,
data = Integrated
)
summary(reg_int)
